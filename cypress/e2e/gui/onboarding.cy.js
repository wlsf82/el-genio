describe('El Genio - Onboarding', () => {
  beforeEach(() => {
    cy.visit('/')
  })

  it('shows the onboarding modal in its first step', () => {
    cy.get('.onboarding-container')
      .as('onboarding')
      .find('h2:contains(Welcome to El Genio 🧞‍♂️)')
      .should('be.visible')
    cy.get('@onboarding')
      .find('.close-button')
      .should('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body p')
      .should('contain', 'El Genio is a powerful no-code testing platform that helps you create and run automated tests for your web applications without writing a single line of code.')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body p')
      .should('contain', "Let's explore how El Genio works and get you started with creating your first test!")
      .and('be.visible')
    cy.get('#dontShowAgain').should('be.visible')
    cy.contains('label', "Don't show again").should('be.visible')
    cy.contains('button', 'Next')
      .should('be.visible')
      .and('be.enabled')
  })

  it('goes through all the onboarding steps till the end', () => {
    cy.contains('button', 'Next').click()

    cy.get('.onboarding-container')
      .as('onboarding')
      .find('h2:contains(Projects)')
      .should('be.visible')
    cy.get('@onboarding')
      .find('.close-button')
      .should('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body p')
      .should('contain', 'In El Genio, everything starts with a project.')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body p')
      .should('contain', "A project represents the website or application you want to test. You can have multiple projects for different applications you're working on.")
      .and('be.visible')
    cy.get('#dontShowAgain').should('be.visible')
    cy.contains('label', "Don't show again").should('be.visible')
    cy.contains('button', 'Previous')
      .should('be.visible')
      .and('be.enabled')
    cy.contains('button', 'Next')
      .should('be.visible')
      .and('be.enabled').click()

    cy.get('@onboarding')
      .find('h2:contains(Test Suites)')
      .should('be.visible')
    cy.get('@onboarding')
      .find('.close-button')
      .should('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body p')
      .should('contain', 'Each project can contain multiple test suites.')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body p')
      .should('contain', 'A test suite is a collection of related test cases that test a specific feature or area of your application.')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body p')
      .should('contain', 'Every test suite can have its own command timeout setting, which controls how long El Genio waits for elements before failing a test. The default timeout is 4000ms (4 seconds)')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body p')
      .contains('Additionally, test suites can have Setup Steps that run before each test case:')
      .should('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(0)
      .should('contain', 'These steps establish common preconditions for all test cases in the suite')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(1)
      .should('contain', 'Setup Steps are defined once but executed before each test case automatically')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(2)
      .should('contain', 'They\'re perfect for repetitive actions like logging in or navigating to a specific page')
      .and('be.visible')
    cy.get('#dontShowAgain').should('be.visible')
    cy.contains('label', "Don't show again").should('be.visible')
    cy.contains('button', 'Previous')
      .should('be.visible')
      .and('be.enabled')
    cy.contains('button', 'Next')
      .should('be.visible')
      .and('be.enabled').click()

    cy.get('@onboarding')
      .find('h2:contains(Test Cases)')
      .should('be.visible')
    cy.get('@onboarding')
      .find('.close-button')
      .should('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body p')
      .should('contain', 'Test suites contain test cases, which are individual scenarios to verify specific functionality.')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body p')
      .should('contain', 'Each test case consists of a series of steps that include:')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(0)
      .should('contain', 'Pre-conditions: Setup steps like visiting URLs')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(1)
      .should('contain', 'Actions: User interactions like clicking buttons or typing text')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(2)
      .should('contain', 'Assertions: Checking that elements exist, are visible, contain specific text, etc.')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body p')
      .should('contain', 'Pro Tip: If you forget to add a step in the middle of your test case, don\'t worry! You can add the missing step at the end and then use the arrow up/down buttons (↑↓) next to each step to reorder them into the correct sequence.')
      .and('be.visible')

    cy.get('.onboarding-css-selectors')
      .as('CSSSection')
      .find('h3:contains(🔎 CSS Selectors Basics)')
      .should('be.visible')
    cy.get('@CSSSection')
      .find('p')
      .first()
      .should(
        'contain',
        'Although El Genio is a no-code testing tool, some basic knowledge of HTML and CSS selectors is required to identify elements on a web page. Here are some common techniques:'
      ).and('be.visible')
      cy.get('@CSSSection')
      .find('p')
      .last()
      .should(
        'contain',
        'For more complex selections, you may need to combine these techniques. If you need help, check the Master CSS Selectors guide.'
      )

    cy.get('#dontShowAgain').should('be.visible')
    cy.contains('label', "Don't show again").should('be.visible')
    cy.contains('button', 'Previous')
      .should('be.visible')
      .and('be.enabled')
    cy.contains('button', 'Next')
      .should('be.visible')
      .and('be.enabled').click()

    cy.get('@onboarding')
      .find('h2:contains(Running Tests)')
      .should('be.visible')
    cy.get('@onboarding')
      .find('.close-button')
      .should('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body p')
      .should('contain', 'El Genio offers multiple ways to run your tests:')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(0)
      .should('contain', 'Run all tests of a project from the projects list view')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(1)
      .should('contain', 'Run all test suites from the test suites view')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(2)
      .should('contain', 'Run a specific test suite from the test suites view')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(3)
      .should('contain', 'Run selected test cases within a test suite (you can select which test cases to run by using the checkboxes next to each test case.)')
      .and('be.visible')
    cy.get('#dontShowAgain').should('be.visible')
    cy.contains('label', "Don't show again").should('be.visible')
    cy.contains('button', 'Previous')
      .should('be.visible')
      .and('be.enabled')
    cy.contains('button', 'Next')
      .should('be.visible')
      .and('be.enabled').click()

    cy.get('@onboarding')
      .find('h2:contains(Test Results)')
      .should('be.visible')
    cy.get('@onboarding')
      .find('.close-button')
      .should('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body p')
      .should('contain', 'After running tests, El Genio provides detailed results:')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(0)
      .should('contain', 'Test pass/fail status')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(1)
      .should('contain', 'Detailed error messages for failures')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(2)
      .should('contain', 'Stack traces to help identify issues')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(3)
      .should('contain', 'Downloadable screenshots captured at the moment of failure')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body ul li')
      .eq(4)
      .should('contain', 'Downloadable videos captured at every test execution')
      .and('be.visible')
    cy.get('@onboarding')
      .find('.onboarding-body p')
      .should('contain', 'These results help you quickly identify and fix issues in your application.')
      .and('be.visible')
    cy.get('#dontShowAgain').should('be.visible')
    cy.contains('label', "Don't show again").should('be.visible')
    cy.contains('button', 'Previous')
      .should('be.visible')
      .and('be.enabled')
    cy.contains('button', 'Get Started')
      .should('be.visible')
      .and('be.enabled').click()

    cy.get('@onboarding').should('not.exist')
  })

  it('modal reappears after a page reload', () => {
    cy.get('.onboarding-container')
      .as('onboarding')
      .should('be.visible')

    Cypress._.times(5, () => {
      cy.contains('button', 'Next').click()
    })
    cy.contains('button', 'Get Started').click()

    cy.get('@onboarding').should('not.exist')

    cy.reload()

    cy.get('@onboarding').should('be.visible')
  })

  it('modal modal reappears after closing it and reloading the page', () => {
    cy.get('.onboarding-container')
      .as('onboarding')
      .find('h2:contains(Welcome to El Genio 🧞‍♂️)')
      .should('be.visible')
    cy.get('@onboarding')
      .find('.close-button')
      .click()

    cy.get('@onboarding').should('not.exist')

    cy.reload()

    cy.get('@onboarding').should('be.visible')
  })

  it("modal does not reappear after a page reload when checking the don't show again checkbox", () => {
    cy.get('.onboarding-container')
      .as('onboarding')
      .should('be.visible')

    cy.get('#dontShowAgain').check()
    cy.get('@onboarding')
      .find('.close-button')
      .click()

    cy.get('@onboarding').should('not.exist')

    cy.reload()

    cy.get('@onboarding').should('not.exist')
  })

  it("modal does not reappear after a page reload when checking the don't show again checkbox and closing it", () => {
    cy.get('.onboarding-container')
      .as('onboarding')
      .should('be.visible')

    cy.get('#dontShowAgain').check()

    Cypress._.times(5, () => {
      cy.contains('button', 'Next').click()
    })
    cy.contains('button', 'Get Started').click()

    cy.get('@onboarding').should('not.exist')

    cy.reload()

    cy.get('@onboarding').should('not.exist')
  })

  it("goes back to the first step after reaching the last one", () => {
    cy.get('.onboarding-container').should('be.visible')

    Cypress._.times(5, () => {
      cy.contains('button', 'Next').click()
    })

    cy.contains('button', 'Get Started').should('be.visible')

    cy.contains('button', 'Previous').click()

    cy.get('.onboarding-container')
      .find('h2:contains(Running Tests)')
      .should('be.visible')

    cy.contains('button', 'Previous').click()

    cy.get('.onboarding-container')
      .find('h2:contains(Test Cases)')
      .should('be.visible')

    cy.contains('button', 'Previous').click()

    cy.get('.onboarding-container')
      .find('h2:contains(Test Suites)')
      .should('be.visible')

    cy.contains('button', 'Previous').click()

    cy.get('.onboarding-container')
      .find('h2:contains(Projects)')
      .should('be.visible')

    cy.contains('button', 'Previous').click()

    cy.get('.onboarding-container')
      .find('h2:contains(Welcome to El Genio 🧞‍♂️)')
      .should('be.visible')

    cy.contains('button', 'Previous').should('not.exist')
  })
})
